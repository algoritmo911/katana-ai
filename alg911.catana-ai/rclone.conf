# This is a placeholder rclone.conf file for Katana AI project.
# In a real setup, this would contain actual configuration for cloud providers.
# Remove '.example' from the section names you wish to use and fill in your details.

# --- Google Drive Example ---
# Full access to Google Drive
# [gdrive.example]
# type = drive
# client_id = YOUR_GOOGLE_CLIENT_ID (Get from Google Cloud Console)
# client_secret = YOUR_GOOGLE_CLIENT_SECRET (Get from Google Cloud Console)
# scope = drive
# # On first run, rclone will need to be authorized. Run 'rclone config' or 'rclone authorize "drive"'
# # It will then guide you through the browser authentication process.
# # After authorization, rclone will show you a token. Paste it here:
# token = {"access_token":"YOUR_ACCESS_TOKEN","token_type":"Bearer","refresh_token":"YOUR_REFRESH_TOKEN","expiry":"YYYY-MM-DDTHH:MM:SSZ"}
# # Optional: Set a root folder ID if you don't want rclone to operate from the root of your Drive
# root_folder_id = YOUR_GOOGLE_DRIVE_ROOT_FOLDER_ID
# # Optional: Use a service account for server-side authentication (more advanced)
# # service_account_file = /path/to/your/service_account.json
# # team_drive = YOUR_TEAM_DRIVE_ID (If using a Shared Drive)

# --- Yandex Disk Example ---
# [yandex.example]
# type = yandex
# # On first run, rclone will need to be authorized. Run 'rclone config'
# # It will guide you through the browser authentication.
# # After authorization, rclone will show you a token. Paste it here:
# token = {"access_token":"YOUR_YANDEX_ACCESS_TOKEN","token_type":"bearer","refresh_token":"YOUR_YANDEX_REFRESH_TOKEN","expiry":"YYYY-MM-DDTHH:MM:SSZ"}
# # Optional: client_id and client_secret if you have them for your own app
# # client_id = YOUR_YANDEX_APP_CLIENT_ID
# # client_secret = YOUR_YANDEX_APP_CLIENT_SECRET

# --- Dropbox Example ---
# [dropbox.example]
# type = dropbox
# # On first run, rclone will need to be authorized. Run 'rclone config'
# # It will guide you through the browser authentication.
# # After authorization, rclone will show you a token. Paste it here:
# token = {"access_token":"YOUR_DROPBOX_ACCESS_TOKEN","token_type":"bearer","refresh_token":"YOUR_DROPBOX_REFRESH_TOKEN","expiry":"YYYY-MM-DDTHH:MM:SSZ"}
# # Optional: client_id and client_secret if you have them for your own app
# # client_id = YOUR_DROPBOX_APP_CLIENT_ID
# # client_secret = YOUR_DROPBOX_APP_CLIENT_SECRET

# --- Local Example (for testing) ---
# This can be used to test rclone operations locally.
# [local_backup_target.example]
# type = local
# # No authentication needed for local type.
# # Paths are local file system paths.
# # nounc = true # Add this if you want to disable server-side move/copy, forcing client-side. Useful for some tests.

# --- Katana Specific Configuration (Uncomment and configure one) ---
# Choose ONE of the cloud providers above, rename the section by removing '.example'
# and configure it. For example, if using Google Drive:
#
# [katana_gdrive_backup]
# type = drive
# client_id = ...
# client_secret = ...
# scope = drive
# token = ...
# root_folder_id = ... (Optional: A specific folder in your Drive for Katana backups)
#
# Then, in sync_to_cloud.sh, REMOTE_DESTINATION would be "katana_gdrive_backup:KatanaData"
# (where KatanaData is a folder within your configured Drive/root_folder_id)
