version: '3.8'

networks:
  katana-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local

services:
  # Katana AI Core: The "brain" of the system.
  katana-ai:
    build:
      context: ./katana-ai
      dockerfile: Dockerfile
    container_name: katana-ai
    volumes:
      - ./katana-ai:/app/katana-ai
      # Also mount sapiens_notes for potential direct access if needed
      - ./sapiens_notes_private:/app/sapiens_notes_private
    networks:
      - katana-net
    ports:
      - "5000:5000"
    command: ["python", "api_server.py"]

  # NeuroVault: The long-term memory and knowledge factory.
  neurovault:
    build:
      context: ./neurovault
      dockerfile: Dockerfile
    container_name: neurovault
    volumes:
      - ./neurovault:/app/neurovault
      # Mount sapiens_notes for the ingestion pipeline
      - ./sapiens_notes_private:/app/sapiens_notes_private
    environment:
      - DATABASE_URL=postgresql://katana_user:katana_pass@postgres:5432/katana_db
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=very_secret_password
    depends_on:
      - postgres
      - neo4j
    networks:
      - katana-net
    tty: true
    stdin_open: true
    ports:
      - "5001:5001"
    command: ["python", "api_server.py"]

  # PostgreSQL with pgvector: The vector database for semantic search.
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    environment:
      - POSTGRES_DB=katana_db
      - POSTGRES_USER=katana_user
      - POSTGRES_PASSWORD=katana_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - katana-net
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U katana_user -d katana_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j: The graph database for storing knowledge relationships.
  neo4j:
    image: neo4j:5
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/very_secret_password
      - NEO4J_PLUGINS=["apoc"] # Include APOC for extended procedures
    volumes:
      - neo4j_data:/data
    networks:
      - katana-net
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
