import streamlit as st
import requests
import json

# --- Configuration ---
BACKEND_URL = "http://127.0.0.1:8000/api/v1/command"

# --- UI Setup ---
st.set_page_config(
    page_title="Katana: Chimera Protocol",
    page_icon="üó°Ô∏è"
)

st.title("–ü—Ä–æ—Ç–æ–∫–æ–ª '–•–∏–º–µ—Ä–∞'")
st.caption("–°–ª–æ–π 1: –†–∞–∑—É–º–Ω—ã–π –°–ª—É—à–∞—Ç–µ–ª—å")

# --- Session State ---
# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Display chat messages from history on app rerun
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])


# --- Main Interaction Logic ---
if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."):
    # Add user message to chat history
    st.session_state.messages.append({"role": "user", "content": prompt})
    # Display user message in chat message container
    with st.chat_message("user"):
        st.markdown(prompt)

    # Display assistant response in chat message container
    with st.chat_message("assistant"):
        message_placeholder = st.empty()
        full_response = ""

        try:
            # Send command to the backend
            response = requests.post(BACKEND_URL, json={"text": prompt})
            response.raise_for_status()  # Raise an exception for bad status codes

            response_data = response.json()
            full_response = response_data.get("response", "Error: No response field in JSON")

        except requests.exceptions.RequestException as e:
            full_response = f"**–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—ç–∫–µ–Ω–¥—É:**\n\n```\n{e}\n```\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω: `uvicorn katana_single_app.main:app --host 0.0.0.0 --port 8000`"
        except json.JSONDecodeError:
            full_response = "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JSON –æ—Ç–≤–µ—Ç –æ—Ç –±—ç–∫–µ–Ω–¥–∞."
        except Exception as e:
            full_response = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}"

        message_placeholder.markdown(full_response)

    # Add assistant response to chat history
    st.session_state.messages.append({"role": "assistant", "content": full_response})
